// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  OWNER
  PARTNER
}

enum FinancialAccountType {
  CASH
  BANK_ACCOUNT
  CREDIT_CARD
  INVESTMENT
  PREPAID
}

model User {
  id                String             @id @default(cuid())
  name              String?
  email             String             @unique
  emailVerified     DateTime?
  image             String?
  role              Role               @default(USER)
  accounts          Account[]
  sessions          Session[]
  financialAccounts FinancialAccount[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  Transaction       Transaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model FinancialAccount {
  id           String               @id @default(cuid())
  userId       String
  user         User                 @relation(fields: [userId], references: [id])
  name         String
  balance      Float                @default(0)
  currency     String               @default("EUR")
  type         FinancialAccountType @default(CASH)
  // lastActivity defaults to creation timestamp (now) so new accounts show immediate activity
  lastActivity DateTime?            @default(now())
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  Transaction  Transaction[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id          String           @id @default(cuid())
  amount      Float
  description String?
  date        DateTime         @default(now())
  type        TransactionType
  category    String?
  accountId   String
  account     FinancialAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)
  userId      String
  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  receiptUrl  String?          @db.Text
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([accountId, date])
  @@index([userId, date])
}
